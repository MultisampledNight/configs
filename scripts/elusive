#!/usr/bin/env nix-shell
#!nix-shell -p OVMF.fd zsh qemu -i zsh
# vim: ft=zsh
set -euo pipefail
. _util

zparseopts -E -D -nogui=nogui

if (( $# != 1 )); then
  echo "takes 1 argument: the name of the elusive instance" 1>&2
  exit 1
fi

project="$1"
shift

base="$(realpath $gcroots)/elusive/base.qcow2"
overlay="$state/elusive/$project/overlay.qcow2"

if [[ ! -r $base ]]; then
  error base image does not exist
  hint run $(colorize 2 elusive-generate-base) to create one
  exit 1
fi

# set up the overlay image first, if not already done
if [[ ! -f $overlay ]]; then
  begin creating overlay $overlay over $base
  mkdir -p $(dirname "$overlay")
  qemu-img create \
    -o backing_file=$base,backing_fmt=qcow2 \
    -f qcow2 \
    $overlay
fi

# then construct the command line
base=(
  -drive file=$overlay,if=virtio,cache.direct=on,aio=native
  -bios "$(echo $buildInputs | cut -d ' ' -f 1)/FV/OVMF.fd"
  -name "elusive-$project"
  -machine q35
  -cpu host
  -smp cpus=8,cores=4,threads=2
  -m size=8G
  -accel kvm
  -nic user,restrict=off,hostfwd=tcp::50022-:22
  -monitor stdio
)

if (( $#nogui )); then
  io=(
    -nographic
  )
else
  io=(
    -device virtio-vga-gl,max_outputs=1
    -display gtk,full-screen=on,gl=on

    -device qemu-xhci
    -device usb-tablet
    -device usb-kbd
  )
fi

# everything's ready, launch
begin running
qemu-system-x86_64 \
  $base \
  $io \
  $@
complete virtual machine ended
