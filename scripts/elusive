#!/usr/bin/env nix-shell
#!nix-shell -p zsh qemu_kvm -i zsh
# vim: ft=zsh
set -eu

zparseopts -E -D -nogui=nogui

if (( $# != 1 )); then
  echo "takes 1 argument: the name of the elusive instance" 1>&2
  exit 1
fi

project_name="$1"
os_specific_args=""

if [[ $project_name == "woe" ]]; then
  overlay_image="$HOME/zukunftslosigkeit/state/vm/woe-10.qcow2"
  os_specific_args=(
    -cdrom "$HOME/media/iso/Win10_22H2_EnglishInternational_x64v1.iso"
  )
else
  base_image=$(readlink -- "/nix/var/nix/gcroots/per-user/$USER/elusive-base")
  overlay_image="$HOME/zukunftslosigkeit/state/elusive/$project_name/overlay.qcow2"

  # set up the overlay image first, if not already done
  if [[ ! -f $overlay_image ]]; then
    echo "creating overlay at $overlay_image since it doesn't exist yet"
    mkdir -p $(dirname -- "$overlay_image")
    qemu-img create \
      -o backing_file=$base_image,backing_fmt=raw \
      -f qcow2 $overlay_image
  fi
fi

args=(
  $overlay_image
  -name "elusive-$project_name"
  -machine q35
  -cpu host
  -smp cpus=8,cores=4,threads=2
  -m size=8G
  -accel kvm
  -nic user,restrict=off,hostfwd=tcp::50022-:22
)

if (( $#nogui )); then
  maybe_gui_args=(
    -nographic
  )
else
  maybe_gui_args=(
    -audio driver=alsa,model=hda,out.buffer-length=48000
    -device virtio-vga-gl,max_outputs=1
    -display gtk,full-screen=on,gl=on

    -device qemu-xhci
    -device usb-mouse
  )
fi

# everything's ready, launch
qemu-system-x86_64 \
  $args \
  $maybe_gui_args \
  $os_specific_args
