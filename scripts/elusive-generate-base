#!/usr/bin/env nix-shell
#!nix-shell -p zsh qemu -i zsh
# vim: ft=zsh
set -euo pipefail
. _util

# note that these are symlinks to *directories*
# the actual images are called base.qcow2 in there
current="$gcroots/elusive"
new="$gcroots/elusive-new"

# idea:
# 1. generate the image and symlink to $new
# 2. rebase from $(readlink $current) to $(readlink $new)
# 3. move $new to $current

state="$state/elusive"

# step 1
begin building image
hint "might take some time, but it's worth it"
hint compression makes the final base image small and cute
nix-build \
  "$config/nixos/elusive" \
  --out-link "$new" \
  $@

# step 2
# need to do so only iff all off these apply:
#
# - there is an old image
# - there's any overlays
#
# otherwise there's nothing qemu could rebase
if [[ -h $current && -d $state && -n "$(ls $state)" ]]; then
  begin rebasing images

  for project in $state/*; do
    part $project

    qemu-img rebase \
      -p \
      -b "$(readlink $new)/base.qcow2" -F qcow2 \
      "$project/overlay.qcow2"
  done
elif [[ ! -d $state || -z "$(ls $state)" ]]; then
  cancel "rebasing skipped: no overlays to rebase"
else
  cancel "rebasing skipped: no old image to rebase from"
fi

# step 3
begin replacing current image
rm $current
mv $new $current

complete generation finished

